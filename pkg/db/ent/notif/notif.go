// Code generated by ent, DO NOT EDIT.

package notif

import (
	"entgo.io/ent"
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the notif type in the database.
	Label = "notif"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldEntID holds the string denoting the ent_id field in the database.
	FieldEntID = "ent_id"
	// FieldAppID holds the string denoting the app_id field in the database.
	FieldAppID = "app_id"
	// FieldUserID holds the string denoting the user_id field in the database.
	FieldUserID = "user_id"
	// FieldNotified holds the string denoting the notified field in the database.
	FieldNotified = "notified"
	// FieldLangID holds the string denoting the lang_id field in the database.
	FieldLangID = "lang_id"
	// FieldEventID holds the string denoting the event_id field in the database.
	FieldEventID = "event_id"
	// FieldEventType holds the string denoting the event_type field in the database.
	FieldEventType = "event_type"
	// FieldUseTemplate holds the string denoting the use_template field in the database.
	FieldUseTemplate = "use_template"
	// FieldTitle holds the string denoting the title field in the database.
	FieldTitle = "title"
	// FieldContent holds the string denoting the content field in the database.
	FieldContent = "content"
	// FieldChannel holds the string denoting the channel field in the database.
	FieldChannel = "channel"
	// FieldExtra holds the string denoting the extra field in the database.
	FieldExtra = "extra"
	// FieldType holds the string denoting the type field in the database.
	FieldType = "type"
	// Table holds the table name of the notif in the database.
	Table = "notifs"
)

// Columns holds all SQL columns for notif fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
	FieldEntID,
	FieldAppID,
	FieldUserID,
	FieldNotified,
	FieldLangID,
	FieldEventID,
	FieldEventType,
	FieldUseTemplate,
	FieldTitle,
	FieldContent,
	FieldChannel,
	FieldExtra,
	FieldType,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// Note that the variables below are initialized by the runtime
// package on the initialization of the application. Therefore,
// it should be imported in the main as follows:
//
//	import _ "github.com/NpoolPlatform/notif-middleware/pkg/db/ent/runtime"
//
var (
	Hooks  [1]ent.Hook
	Policy ent.Policy
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() uint32
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() uint32
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() uint32
	// DefaultDeletedAt holds the default value on creation for the "deleted_at" field.
	DefaultDeletedAt func() uint32
	// DefaultEntID holds the default value on creation for the "ent_id" field.
	DefaultEntID func() uuid.UUID
	// DefaultAppID holds the default value on creation for the "app_id" field.
	DefaultAppID func() uuid.UUID
	// DefaultUserID holds the default value on creation for the "user_id" field.
	DefaultUserID func() uuid.UUID
	// DefaultNotified holds the default value on creation for the "notified" field.
	DefaultNotified bool
	// DefaultLangID holds the default value on creation for the "lang_id" field.
	DefaultLangID func() uuid.UUID
	// DefaultEventID holds the default value on creation for the "event_id" field.
	DefaultEventID func() uuid.UUID
	// DefaultEventType holds the default value on creation for the "event_type" field.
	DefaultEventType string
	// DefaultUseTemplate holds the default value on creation for the "use_template" field.
	DefaultUseTemplate bool
	// DefaultTitle holds the default value on creation for the "title" field.
	DefaultTitle string
	// DefaultContent holds the default value on creation for the "content" field.
	DefaultContent string
	// DefaultChannel holds the default value on creation for the "channel" field.
	DefaultChannel string
	// DefaultExtra holds the default value on creation for the "extra" field.
	DefaultExtra string
	// DefaultType holds the default value on creation for the "type" field.
	DefaultType string
)
